# Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

AWSTemplateFormatVersion: 2010-09-09

Parameters:
  S3BucketName:
    Type: String

  GitHubToken:
    Type: String

  BatchRepositoryOwner:
    Type: String
    Default: awslabs

  BatchRepositoryName:
    Type: String
    Default: aws-batch-cbmc

  BatchRepositoryBranchName:
    Type: String
    Default: master

Resources:
  BuildBatchRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub "Batch-CodeBuild-Policy-${AWS::Region}"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - s3:GetObject
                  - s3:PutObject
                Effect: Allow
                Resource: !Join ["/", [!Sub "arn:aws:s3:::${S3BucketName}", "*"]]
              - Action:
                  - s3:ListBucket
                Effect: Allow
                Resource: !Sub "arn:aws:s3:::${S3BucketName}"
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"

  BuildBatchProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:1.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: S3_BUCKET
            Type: PLAINTEXT
            Value: !Ref S3BucketName
      Name: "Build-Batch-Project"
      ServiceRole: !Ref BuildBatchRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              commands:
                - export DEBIAN_FRONTEND=noninteractive
                - apt-get update
                - apt-get -y install python3 python3-pip python3-virtualenv awscli zip
            build:
              commands:
                - export DATE=`date -u +%Y%m%d-%H%M%S`
                - export COMMIT=`expr substr ${CODEBUILD_RESOLVED_SOURCE_VERSION} 1 8`

                - make -C pkg-batch BATCHDIR=..
                - >
                  aws s3 cp pkg-batch/cbmc-batch.tar.gz
                  "s3://$S3_BUCKET/package/batch/cbmc-batch-$DATE-$COMMIT.tar.gz"

                - mkdir /tmp/template
                - cp ci/snapshot/*.yaml template/*.yaml /tmp/template
                - tar fcz /tmp/template.tar.gz -C /tmp template
                - >
                  aws s3 cp /tmp/template.tar.gz
                  "s3://$S3_BUCKET/package/template/template-$DATE-$COMMIT.tar.gz"

                - mv bin/cbmc-batch bin/cbmc_batch.py
                - mv bin/cbmc-status bin/cbmc_status.py
                - zip -j batch.zip bin/*
                - zip -j -g batch.zip ci/snapshot/*.py
                - |
                  python3 -m virtualenv -p /usr/bin/python3 venv
                  . venv/bin/activate
                  pip3 install pyyaml
                  pip3 install pygithub
                  pip3 install awscli
                  pip3 install backports.tempfile
                  pip3 install future
                  cd venv/lib/python3.6/site-packages
                  zip -g -r ../../../../batch.zip *
                  cd ../../../../
                  cp venv/bin/aws .
                  sed -i '1s@.*@#!/usr/bin/python3@' aws
                  zip -g batch.zip aws
                - aws s3 cp batch.zip "s3://$S3_BUCKET/package/lambda/lambda-$DATE-$COMMIT.zip"

  BuildBatchPipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub "Batch-Pipeline-Policy-${AWS::Region}"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Effect: Allow
                Resource:
                  - !GetAtt BuildBatchProject.Arn
              - Action:
                  - s3:PutObject
                Effect: Allow
                Resource: !Join ["/", [!Sub "arn:aws:s3:::${S3BucketName}", "*"]]

  BuildBatchPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: "Build-Batch-Pipeline"
      RoleArn: !GetAtt BuildBatchPipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref S3BucketName
      Stages:
        - Name: "Source"
          Actions:
            - Name: "Build-Batch-Source-Action"
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: !Ref BatchRepositoryOwner
                Repo: !Ref BatchRepositoryName
                Branch: !Ref BatchRepositoryBranchName
                OAuthToken: !Ref GitHubToken
                PollForSourceChanges: True
              OutputArtifacts:
                - Name: "batch-src"
        - Name: "Build"
          Actions:
            - Name: "Build-Batch-Build-Action"
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref BuildBatchProject
              InputArtifacts:
                - Name: "batch-src"
              RunOrder: 1


Outputs:
  BuildBatchPipeline:
    Value: !Ref BuildBatchPipeline
    Export:
      Name: BuildBatchPipeline
